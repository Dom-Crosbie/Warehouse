{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for managing warehouse spaces.",
    "version" : "1.0.0",
    "title" : "Warehouse Space API",
    "termsOfService" : "http://swagger.io/terms/",
    "contact" : {
      "email" : "apiteam@swagger.io"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/domcrosbie-cc0/Test-Comments/1.0.0",
  "tags" : [ {
    "name" : "warehouse",
    "description" : "Operations about warehouse spaces"
  } ],
  "schemes" : [ "https", "http" ],
  "paths" : {
    "/warehouses" : {
      "get" : {
        "tags" : [ "warehouse" ],
        "summary" : "Get all warehouse spaces.",
        "produces" : [ "application/json" ],
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "A list of warehouse spaces."
          },
          "500" : {
            "description" : "Server error."
          }
        }
      },
      "post" : {
        "tags" : [ "warehouse" ],
        "summary" : "Create a new warehouse space.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "warehouse",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Warehouse"
          }
        } ],
        "responses" : {
          "201" : {
            "description" : "Warehouse space created successfully."
          },
          "400" : {
            "description" : "Invalid input."
          },
          "500" : {
            "description" : "Server error."
          }
        }
      }
    },
    "/warehouses/{warehouseId}" : {
      "get" : {
        "tags" : [ "warehouse" ],
        "summary" : "Get a warehouse space by ID.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "warehouseId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "200" : {
            "description" : "A single warehouse space."
          },
          "404" : {
            "description" : "Warehouse not found."
          },
          "500" : {
            "description" : "Server error."
          }
        }
      },
      "put" : {
        "tags" : [ "warehouse" ],
        "summary" : "Update an existing warehouse space.",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "warehouseId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        }, {
          "in" : "body",
          "name" : "warehouse",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/Warehouse"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Warehouse space updated successfully."
          },
          "400" : {
            "description" : "Invalid ID supplied."
          },
          "404" : {
            "description" : "Warehouse not found."
          },
          "500" : {
            "description" : "Server error."
          }
        }
      },
      "delete" : {
        "tags" : [ "warehouse" ],
        "summary" : "Delete a warehouse space.",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "warehouseId",
          "in" : "path",
          "required" : true,
          "type" : "integer",
          "format" : "int64"
        } ],
        "responses" : {
          "204" : {
            "description" : "Warehouse space deleted successfully."
          },
          "404" : {
            "description" : "Warehouse not found."
          },
          "500" : {
            "description" : "Server error."
          }
        }
      }
    }
  },
  "definitions" : {
    "Warehouse" : {
      "type" : "object",
      "required" : [ "location", "name", "size" ],
      "properties" : {
        "id" : {
          "type" : "integer",
          "format" : "int64"
        },
        "name" : {
          "type" : "string"
        },
        "location" : {
          "type" : "string"
        },
        "size" : {
          "type" : "integer",
          "format" : "int32"
        },
        "status" : {
          "type" : "string",
          "enum" : [ "available", "occupied", "maintenance" ]
        }
      },
      "xml" : {
        "name" : "Warehouse"
      }
    },
    "RateLimitInfo" : {
      "type" : "object",
      "required" : [ "limit", "remaining", "reset", "retryAfter" ],
      "properties" : {
        "limit" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 1000,
          "description" : "Maximum number of requests allowed in the time window"
        },
        "remaining" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 847,
          "description" : "Number of requests remaining in the current time window"
        },
        "reset" : {
          "type" : "integer",
          "format" : "int64",
          "example" : 1697318400,
          "description" : "Unix timestamp when the rate limit window resets"
        },
        "retryAfter" : {
          "type" : "integer",
          "format" : "int32",
          "example" : 60,
          "description" : "Number of seconds to wait before retrying (only present when rate limited)"
        }
      }
    },
    "RateLimitExceeded" : {
      "type" : "object",
      "required" : [ "error", "message", "rateLimit" ],
      "properties" : {
        "error" : {
          "type" : "string",
          "example" : "RATE_LIMIT_EXCEEDED",
          "description" : "Error code for rate limit exceeded"
        },
        "message" : {
          "type" : "string",
          "example" : "Rate limit exceeded. Please retry after the specified duration.",
          "description" : "Human-readable error message"
        },
        "rateLimit" : {
          "$ref" : "#/definitions/RateLimitInfo"
        }
      }
    }
  },
  "responses" : {
    "RateLimitExceededResponse" : {
      "description" : "Rate limit exceeded",
      "headers" : {
        "X-RateLimit-Limit" : {
          "type" : "integer",
          "description" : "Maximum number of requests allowed per time window"
        },
        "X-RateLimit-Remaining" : {
          "type" : "integer",
          "description" : "Number of requests remaining in current window"
        },
        "X-RateLimit-Reset" : {
          "type" : "integer",
          "description" : "Unix timestamp when the rate limit window resets"
        },
        "X-RateLimit-Retry-After" : {
          "type" : "integer",
          "description" : "Seconds to wait before retrying (when rate limited)"
        }
      },
      "schema" : {
        "$ref" : "#/definitions/RateLimitExceeded"
      }
    }
  },
  "externalDocs" : {
    "description" : "Find out more about the Warehouse Space API.",
    "url" : "http://swagger.io"
  }
}